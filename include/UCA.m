
% MATLAB Code from Sensor Array Analyzer App

% Generated by MATLAB 9.12 and Phased Array System Toolbox 4.7

% Generated on 10-Feb-2023 07:02:21

function antenna = UCA()

Frequency = 3.3e9;
lightSpeed = 299792458;

%Create a uniform circular array
Array = phased.UCA('NumElements',9,...
    'ArrayNormal','z','Taper',[1 1 1 1 1 1 1 1 1]);
% The multiplication factor for lambda units to meter conversion
Array.Radius = 0.5*(lightSpeed/Frequency);
disp(Array.Radius);

% Create an isotropic antenna element
Elem = phased.IsotropicAntennaElement;
Elem.FrequencyRange = [Frequency Frequency+1];
Array.Element = Elem;

% Assign Frequencies and Propagation Speed

PropagationSpeed = 299792458;

% Assign Steering Angles
SteeringAngles = [0.01;0];
% Assign Phase shift quantization bits
PhaseShiftBits = 6;



% Create Figure

% % Plot Array Geometry
% figure;
% viewArray(Array,'ShowNormal',false,...
%     'ShowTaper',false,'ShowIndex','None',...
%     'ShowLocalCoordinates',true,'ShowAnnotation',false,...
%     'Orientation',[0;0;0]);

% Calculate Steering Weights

Freq3D = 2400000000;
% Find the weights
w = zeros(getNumElements(Array), length(Frequency));
SteerVector = phased.SteeringVector('SensorArray', Array,...
    'PropagationSpeed', PropagationSpeed, 'NumPhaseShifterBits', PhaseShiftBits(1));
for idx = 1:length(Frequency)
    w(:, idx) = step(SteerVector, Frequency(idx), SteeringAngles(:, idx));
end

antenna = Array;

% % Plot 3d graph
% format = 'polar';
% plotType = 'Directivity';
% figure;
% pattern(Array, Freq3D , 'PropagationSpeed', PropagationSpeed,...
%     'CoordinateSystem', format,'weights', w(:,1),...
%     'ShowArray',false,'ShowLocalCoordinates',true,...
%     'ShowColorbar',true,'Orientation',[0;0;0],...
%     'Type', plotType);

% Find the weights
w = zeros(getNumElements(Array), length(Frequency));
for idx = 1:length(Frequency)
    SteerVector = phased.SteeringVector('SensorArray', Array,...
        'PropagationSpeed', PropagationSpeed, ...
        'NumPhaseShifterBits', PhaseShiftBits(idx));
    w(:, idx) = step(SteerVector, Frequency(idx), SteeringAngles(:, idx));
end

% % Plot 2d azimuth graph
% format = 'polar';
% cutAngle = 0;
% plotType = 'Directivity';
% plotStyle = 'Overlay';
% figure;
% pattern(Array, Frequency, -180:180, cutAngle, 'PropagationSpeed', PropagationSpeed,...
%     'CoordinateSystem', format ,'weights', w, ...
%     'Type', plotType, 'PlotStyle', plotStyle);

